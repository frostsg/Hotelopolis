"""
This is library that does sentimental analysis on hotel reviews. 
The reviews will either be deemed as positive or negative. A rating score will be given based on these positive and negative reviews
Done by frostsg
"""
import nltk
import pandas as pd
from nltk.sentiment.vader import SentimentIntensityAnalyzer

#Initialising the analyzer from nltk and reading the csv file
senti = SentimentIntensityAnalyzer()
hotelfilename = "Filtered_Datafiniti_Hotel_Main_Review.csv"
datafile = pd.read_csv(hotelfilename, encoding='utf-8')
datafile = datafile.astype(str)

#Idk what's this for
reviews = datafile['reviews.text']
reviews = str(reviews).encode('utf-8')

#This function allow us to determine the overall sentimental for a specific hotel after analysing the reviews
def sentiment_score(pos, neg):
    if pos > neg:
        return "Positive ðŸ˜Š "
    elif pos == neg:
        return "Neutral"
    else:
        return "Negative ðŸ˜  "

#This function calculate the review scores and output its score based on a 5 Star rating system.
def rating_score(pos, neg):
    total = pos + neg 
    score = (pos/total) * 5
    if score <= 0:
        score = 1.00
    return score

# This is a old defunc function that is used to calculate review, I am just keeping it for references
def NEW_rating(maindata, hotel_name):
    for i in range(0, len(maindata)-1):
        if maindata[i] == hotel_name:
            datafile["positive"] = senti.polarity_scores(datafile["reviews.text"][i])["pos"]
            datafile["negative"] = senti.polarity_scores(datafile["reviews.text"][i])["neg"]
        else:
            continue
    pos = int(sum(datafile["positive"]))
    neg = int(sum(datafile["negative"]))
    score = rating_score(pos, neg)
    sentiment = sentiment_score(pos, neg)   
    return score, sentiment

# This function analyse reviews for each hotel and categorise them into positive or negative reviews.
def analyse_reviews(maindata, hotel_name):
    for i in range(0, len(maindata)-1):
        if maindata[i] == hotel_name:
            datafile["positive"] = senti.polarity_scores(datafile["reviews.text"][i])["pos"]
            datafile["negative"] = senti.polarity_scores(datafile["reviews.text"][i])["neg"]
        else:
            continue
    pos = int(sum(datafile["positive"]))
    neg = int(sum(datafile["negative"]))
    #print(pos, neg)
    return pos,neg

# This is the main function that allows the program to calculate the score based on a curated csv file that is generated by the webscraper library
def review_score(maindata):
    for i in range(0, len(maindata)-1): 
        if maindata[i] != maindata[i+1]:
            print("Hotel : ", maindata[i])
            pos,neg = analyse_reviews(maindata, maindata[i])
            print("Overall Review of : ", (sentiment_score(pos,neg)))
            print("Rating Score : %.1f Stars" %(rating_score(pos,neg)))
        elif maindata[i] == maindata[len(maindata)-1]:
            print("Hotel : ", maindata[i])
            pos,neg = analyse_reviews(maindata, maindata[i])
            print("Overall Review of : ", (sentiment_score(pos,neg)))
            print("Rating Score : %.1f Stars" %(rating_score(pos,neg)))
            break
        else:
            continue

review_score(datafile["name"])
    
"""    
This is for some beta test, I am just keeping the code here for reference
for i in range(0, len(datafile["name"])-1):
    if datafile["name"][i] != datafile["name"][i+1]:
        print("Hotel : ", datafile["name"][i])
        pos,neg = NEWNEW_rating(datafile["name"], datafile["name"][i])
        print("Overall Review of : ", (sentiment_score(pos,neg)))
        print("Rating Score : %.1f Stars" %(rating_score(pos, neg)))
    elif datafile["name"][i] == datafile["name"][len(datafile["name"])-1]:
        print("Hotel : ", datafile["name"][i])
        pos,neg = NEWNEW_rating(datafile["name"], datafile["name"][i])
        print("Overall Review of : ", (sentiment_score(pos,neg)))
        print("Rating Score : %.1f Stars" %(rating_score(pos, neg)))
        break
    else:
        continue
"""
